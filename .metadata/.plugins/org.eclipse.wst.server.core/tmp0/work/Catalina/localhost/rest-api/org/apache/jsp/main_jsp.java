/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2023-12-23 10:01:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import Models.Users;
import Models.Client;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Models.Users");
    _jspx_imports_classes.add("Models.Client");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Main Page</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.slim.min.js\"\r\n");
      out.write("\tintegrity=\"sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<link href=\"/DataTables/datatables.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"/DataTables/datatables.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf8\"\r\n");
      out.write("\tsrc=\"https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("</head>\r\n");

List<Users> userList = (List<Users>) session.getAttribute("usersList");

      out.write('\r');
      out.write('\n');

List<Client> clientList = (List<Client>) session.getAttribute("clientList");
boolean clientBtn = (session.getAttribute("clientBtn") != null) ? (boolean) session.getAttribute("clientBtn") : false;

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<div id=\"main\">\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("\t\t<a class=\"navbar-brand\" href=\"#\">Administrator</a>\r\n");
      out.write("\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\tdata-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n");
      out.write("\t\t\taria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("\t\t\t<ul class=\"navbar-nav\">\r\n");
      out.write("\t\t\t\t<li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t\t<form class=\"form-inline my-2 my-lg-0\" action=\"userRepository\"\r\n");
      out.write("\t\t\t\t\t\tmethod=\"GET\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"showUsersTable()\">Users List</button>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t\t<form class=\"form-inline my-2 my-lg-0 mx-3\" action=\"createUser\"\r\n");
      out.write("\t\t\t\t\t\tmethod=\"GET\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Create\r\n");
      out.write("\t\t\t\t\t\t\ta new user</button>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t\t<form class=\"form-inline my-2 my-lg-0 mx-3\"\r\n");
      out.write("\t\t\t\t\t\taction=\"clientRepository\" method=\"GET\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"showClientsTable()\">Clients List</button>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<div class=\"container justify-content-center border mt-5\">\r\n");
      out.write("\t\t");

		if (userList != null && !userList.isEmpty()&&clientBtn!=true) {
		
      out.write("\r\n");
      out.write("\t\t<div id=\"usersTable\">\r\n");
      out.write("\t\t\t<h4 class=\"text-center\">Users Repository</h4>\r\n");
      out.write("\t\t\t<div id=\"table-area row\">\r\n");
      out.write("\t\t\t\t<table id=\"table-stats\" class=\"display table\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"table-heading\">General Stats</h4>\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Id</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Username</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>First Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Last Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Email</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Delete</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Update</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbbody> ");

 for (Users user : userList) {
 
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>");
      out.print(user.getId());
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t<th>");
      out.print(user.getUsername());
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t<th>");
      out.print(user.getFirstName());
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t<th>");
      out.print(user.getLastName());
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t<th>");
      out.print(user.getEmail());
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t<th><a href=\"/rest-api/delete/");
      out.print(user.getId());
      out.write("\">X</a></th>\r\n");
      out.write("\t\t\t\t\t\t<th><a href=\"/rest-api/updateUser/");
      out.print(user.getId());
      out.write("\">update</a>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

		} else if (clientList != null && !clientList.isEmpty()) {
		
      out.write("\r\n");
      out.write("\t\t<div id=\"clientsTable\">\r\n");
      out.write("\t\t\t<h4 class=\"text-center\">Clients Repository</h4>\r\n");
      out.write("\t\t\t<div id=\"table-area row\">\r\n");
      out.write("\t\t\t\t<table id=\"table-stats\" class=\"display table\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"table-heading\">General Stats</h4>\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>ID</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Client ID</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>View Client\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<!-- Add more columns as needed -->\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t");

						for (Client client : clientList) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(client.getId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(client.getClientId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(client.getName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<th><a href=\"/rest-api/viewClient/");
      out.print(client.getId());
      out.write("\">View Client</a></th>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- Populate other client fields similarly -->\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");

						}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

		}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src='table.js'></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
